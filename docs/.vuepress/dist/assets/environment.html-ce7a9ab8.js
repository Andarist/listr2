import{_ as n,W as d,X as r,a4 as i,Y as e,$ as o,Z as s,a5 as a,D as c}from"./framework-4c9bc095.js";const l={},u=e("p",null,[e("code",null,"listr2"),o(" supports only modern "),e("code",null,"node.js"),o(" environments, since it is mostly intended for CLI applications, but can be used as a task list in any application.")],-1),h=a('<ul><li><code>listr2</code> now supports both <code>esm</code> and <code>cjs</code> modules.</li><li>You need a supported <code>node.js</code> version, end-of-life versions are deprecated and not supported.</li></ul><h2 id="supporting-multiple-node-module-structures" tabindex="-1"><a class="header-anchor" href="#supporting-multiple-node-module-structures" aria-hidden="true">#</a> Supporting Multiple Node Module Structures</h2><p>At some point, the support for <code>cjs</code> will be dropped in favor of keeping up with the <code>node.js</code> ecosystem. This will of course be done through a major release.</p><p>But now also taking into hand my current situation of using mostly <code>cjs</code> capable libraries, I do want to keep the <code>cjs</code> version as everything slowly migrates to <code>esm</code>.</p><p>With the latest changes on <code>ts-node</code>, <code>jest</code>, and <code>ts-jest</code> allowed us to move everything in the repository to <code>esm</code>. This enabled the repository starting from version <code>&gt;= 6</code> to use dynamic imports for anything that is using a <code>esm</code> module. So from that version and upward, everything should be up to date with the upstream of the dependencies. So keeping the <code>cjs</code> version does not hinder us from updating the given packages.</p><h3 id="disadvantages" tabindex="-1"><a class="header-anchor" href="#disadvantages" aria-hidden="true">#</a> Disadvantages</h3>',6),p=e("li",null,"We have to bundle two instances, which doubles our distribution size.",-1),m=e("code",null,"esm",-1),_={href:"https://github.com/sindresorhus",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"npm",-1),g=e("code",null,"node.js",-1),v=e("code",null,"10",-1),b={href:"https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c",target:"_blank",rel:"noopener noreferrer"};function y(w,k){const t=c("ExternalLinkIcon");return d(),r("div",null,[u,i(" more "),h,e("ul",null,[p,e("li",null,[o("The community is moving to pure "),m,o(" modules. "),e("a",_,[o("sindresorhus"),s(t)]),o(" who is the maintainer of many-core "),f,o(" packages (cheers!) has to lead the movement with the deprecated "),g,o(),v,o(" support. You can read more about "),e("a",b,[o("here"),s(t)]),o(" in his post.")])])])}const x=n(l,[["render",y],["__file","environment.html.vue"]]);export{x as default};
