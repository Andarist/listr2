import{_ as e,W as r,X as a,a5 as t}from"./framework-4c9bc095.js";const d={},s=t('<h1 id="class-processoutputbuffer" tabindex="-1"><a class="header-anchor" href="#class-processoutputbuffer" aria-hidden="true">#</a> Class: ProcessOutputBuffer</h1><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new ProcessOutputBuffer</strong>()</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="buffer" tabindex="-1"><a class="header-anchor" href="#buffer" aria-hidden="true">#</a> buffer</h3><p>• <code>Private</code> <strong>buffer</strong>: <code>string</code>[] = <code>[]</code></p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:4</p><hr><h3 id="decoder" tabindex="-1"><a class="header-anchor" href="#decoder" aria-hidden="true">#</a> decoder</h3><p>• <code>Private</code> <code>Readonly</code> <strong>decoder</strong>: <code>StringDecoder</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:5</p><h2 id="accessors" tabindex="-1"><a class="header-anchor" href="#accessors" aria-hidden="true">#</a> Accessors</h2><h3 id="all" tabindex="-1"><a class="header-anchor" href="#all" aria-hidden="true">#</a> all</h3><p>• <code>get</code> <strong>all</strong>(): <code>string</code>[]</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>string</code>[]</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:7</p><hr><h3 id="last" tabindex="-1"><a class="header-anchor" href="#last" aria-hidden="true">#</a> last</h3><p>• <code>get</code> <strong>last</strong>(): <code>string</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:11</p><hr><h3 id="length" tabindex="-1"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h3><p>• <code>get</code> <strong>length</strong>(): <code>number</code></p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h4><p><code>number</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:15</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="write" tabindex="-1"><a class="header-anchor" href="#write" aria-hidden="true">#</a> write</h3><p>▸ <strong>write</strong>(<code>data</code>, <code>...args</code>): <code>boolean</code></p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code> | <code>Uint8Array</code></td></tr><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;">[string?, Function?] | [Function?]</td></tr></tbody></table><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:19</p><hr><h3 id="reset" tabindex="-1"><a class="header-anchor" href="#reset" aria-hidden="true">#</a> reset</h3><p>▸ <strong>reset</strong>(): <code>void</code></p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>src/utils/process-output/process-output-buffer.ts:31</p>',51),n=[s];function i(o,h){return r(),a("div",null,n)}const u=e(d,[["render",i],["__file","ProcessOutputBuffer.html.vue"]]);export{u as default};
