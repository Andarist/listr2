import{_ as n,W as l,X as r,Y as e,$ as t,Z as a,a2 as o,a5 as d,D as c}from"./framework-4c9bc095.js";const i={},_=e("h1",{id:"type-alias-listrtaskresult-ctx",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-alias-listrtaskresult-ctx","aria-hidden":"true"},"#"),t(" Type alias: ListrTaskResult<Ctx>")],-1),h=e("strong",null,"ListrTaskResult",-1),u=e("code",null,"Ctx",-1),p=e("code",null,"string",-1),f=e("code",null,"Promise",-1),m=e("code",null,"any",-1),x=e("code",null,"Listr",-1),y=e("code",null,"Ctx",-1),b=e("code",null,"ListrRendererValue",-1),k=e("code",null,"any",-1),L=e("code",null,"Readable",-1),R=e("code",null,"NodeJS.ReadableStream",-1),T=e("code",null,"Observable",-1),C=e("code",null,"any",-1),N=d('<p>Task can be set of sync or async function, an Observable or a stream.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Ctx</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/task.interface.ts:73</p>',5);function V(v,g){const s=c("RouterLink");return l(),r("div",null,[_,e("p",null,[t("Æ¬ "),h,t("<"),u,t(">: "),p,t(" | "),f,t("<"),m,t("> | "),a(s,{to:"/api/classes/Listr.html"},{default:o(()=>[x]),_:1}),t("<"),y,t(", "),a(s,{to:"/api/types/ListrRendererValue.html"},{default:o(()=>[b]),_:1}),t(", "),k,t("> | "),L,t(" | "),R,t(" | "),T,t("<"),C,t(">")]),N])}const S=n(i,[["render",V],["__file","ListrTaskResult.html.vue"]]);export{S as default};
