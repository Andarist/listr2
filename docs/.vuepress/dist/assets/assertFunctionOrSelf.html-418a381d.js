import{_ as e,W as t,X as d,a5 as a}from"./framework-4c9bc095.js";const o={},c=a('<h1 id="function-assertfunctionorself" tabindex="-1"><a class="header-anchor" href="#function-assertfunctionorself" aria-hidden="true">#</a> Function: assertFunctionOrSelf</h1><p>â–¸ <strong>assertFunctionOrSelf</strong>&lt;<code>T</code>&gt;(<code>functionOrSelf</code>, <code>...args</code>): <code>T</code> extends (...<code>args</code>: <code>any</code>[]) =&gt; <code>any</code> ? <code>ReturnType</code>&lt;<code>T</code>&gt; : <code>T</code></p><p>This function asserts the given value as a function or itself. If the value itself is a function it will evaluate it with the passed in arguments, elsewise it will directly return itself.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>functionOrSelf</code></td><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>T</code> extends (...<code>args</code>: <code>any</code>[]) =&gt; <code>any</code> ? <code>Parameters</code>&lt;<code>T</code>&gt; : <code>never</code></td></tr></tbody></table><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>T</code> extends (...<code>args</code>: <code>any</code>[]) =&gt; <code>any</code> ? <code>ReturnType</code>&lt;<code>T</code>&gt; : <code>T</code></p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/utils/assert.ts:6</p>',11),r=[c];function n(s,i){return t(),d("div",null,r)}const h=e(o,[["render",n],["__file","assertFunctionOrSelf.html.vue"]]);export{h as default};
