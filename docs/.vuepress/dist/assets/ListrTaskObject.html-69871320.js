import{_ as r,W as i,X as h,Y as e,$ as t,Z as d,a2 as n,a5 as s,D as o}from"./framework-4c9bc095.js";const l={},c=e("h1",{id:"class-listrtaskobject-ctx-renderer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-listrtaskobject-ctx-renderer","aria-hidden":"true"},"#"),t(" Class: ListrTaskObject<Ctx, Renderer>")],-1),u=e("p",null,"Create a task from the given set of variables and make it runnable.",-1),p=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),_=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),f=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"Ctx")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Ctx")])],-1),b=e("td",{style:{"text-align":"left"}},[e("code",null,"Renderer")],-1),x={style:{"text-align":"left"}},g=e("code",null,"ListrRendererFactory",-1),m=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),t(" Hierarchy")],-1),y=e("code",null,"ListrTaskEventManager",-1),k=e("p",null,[t("↳ "),e("strong",null,[e("code",null,"ListrTaskObject")])],-1),T=s('<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="emit" tabindex="-1"><a class="header-anchor" href="#emit" aria-hidden="true">#</a> emit</h3><p>▸ <strong>emit</strong>&lt;<code>E</code>&gt;(<code>dispatch</code>, <code>args?</code>): <code>void</code></p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),v=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),L=e("td",{style:{"text-align":"left"}},[e("code",null,"E")],-1),R={style:{"text-align":"left"}},E=e("code",null,"ListrTaskEventType",-1),D=e("code",null,"ListrTaskEventType",-1),O=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),t(" Parameters")],-1),M=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"dispatch")]),e("td",{style:{"text-align":"left"}},[e("code",null,"E")])],-1),C=e("td",{style:{"text-align":"left"}},[e("code",null,"args?")],-1),N={style:{"text-align":"left"}},w=e("code",null,"EventData",-1),S=e("code",null,"E",-1),j=e("code",null,"ListrTaskEventMap",-1),$=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns","aria-hidden":"true"},"#"),t(" Returns")],-1),F=e("p",null,[e("code",null,"void")],-1),z=e("h4",{id:"inherited-from",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from","aria-hidden":"true"},"#"),t(" Inherited from")],-1),B=s('<h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/lib/event-manager.ts:8</p><hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on" aria-hidden="true">#</a> on</h3><p>▸ <strong>on</strong>&lt;<code>E</code>&gt;(<code>dispatch</code>, <code>handler</code>): <code>void</code></p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2" aria-hidden="true">#</a> Type parameters</h4>',6),G=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),I=e("td",{style:{"text-align":"left"}},[e("code",null,"E")],-1),A={style:{"text-align":"left"}},V=e("code",null,"ListrTaskEventType",-1),W=e("code",null,"ListrTaskEventType",-1),q=e("h4",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1","aria-hidden":"true"},"#"),t(" Parameters")],-1),U=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),H=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"dispatch")]),e("td",{style:{"text-align":"left"}},[e("code",null,"E")])],-1),X=e("td",{style:{"text-align":"left"}},[e("code",null,"handler")],-1),Y={style:{"text-align":"left"}},Z=e("code",null,"data",-1),J=e("code",null,"EventData",-1),K=e("code",null,"E",-1),Q=e("code",null,"ListrTaskEventMap",-1),ee=e("code",null,"void",-1),te=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1","aria-hidden":"true"},"#"),t(" Returns")],-1),ae=e("p",null,[e("code",null,"void")],-1),de=e("h4",{id:"inherited-from-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-1","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ne=s('<h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/lib/event-manager.ts:12</p><hr><h3 id="once" tabindex="-1"><a class="header-anchor" href="#once" aria-hidden="true">#</a> once</h3><p>▸ <strong>once</strong>&lt;<code>E</code>&gt;(<code>dispatch</code>, <code>handler</code>): <code>void</code></p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3" aria-hidden="true">#</a> Type parameters</h4>',6),se=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),re=e("td",{style:{"text-align":"left"}},[e("code",null,"E")],-1),ie={style:{"text-align":"left"}},he=e("code",null,"ListrTaskEventType",-1),oe=e("code",null,"ListrTaskEventType",-1),le=e("h4",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2","aria-hidden":"true"},"#"),t(" Parameters")],-1),ce=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ue=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"dispatch")]),e("td",{style:{"text-align":"left"}},[e("code",null,"E")])],-1),pe=e("td",{style:{"text-align":"left"}},[e("code",null,"handler")],-1),_e={style:{"text-align":"left"}},fe=e("code",null,"data",-1),be=e("code",null,"EventData",-1),xe=e("code",null,"E",-1),ge=e("code",null,"ListrTaskEventMap",-1),me=e("code",null,"void",-1),ye=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),ke=e("p",null,[e("code",null,"void")],-1),Te=e("h4",{id:"inherited-from-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-2","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ve=s('<h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>src/lib/event-manager.ts:16</p><hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off" aria-hidden="true">#</a> off</h3><p>▸ <strong>off</strong>&lt;<code>E</code>&gt;(<code>dispatch</code>, <code>handler?</code>): <code>void</code></p><h4 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4" aria-hidden="true">#</a> Type parameters</h4>',6),Le=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Re=e("td",{style:{"text-align":"left"}},[e("code",null,"E")],-1),Ee={style:{"text-align":"left"}},De=e("code",null,"ListrTaskEventType",-1),Oe=e("code",null,"ListrTaskEventType",-1),Me=e("h4",{id:"parameters-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-3","aria-hidden":"true"},"#"),t(" Parameters")],-1),Pe=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ce=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"dispatch")]),e("td",{style:{"text-align":"left"}},[e("code",null,"E")])],-1),Ne=e("td",{style:{"text-align":"left"}},[e("code",null,"handler?")],-1),we={style:{"text-align":"left"}},Se=e("code",null,"data",-1),je=e("code",null,"EventData",-1),$e=e("code",null,"E",-1),Fe=e("code",null,"ListrTaskEventMap",-1),ze=e("code",null,"void",-1),Be=e("h4",{id:"returns-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-3","aria-hidden":"true"},"#"),t(" Returns")],-1),Ge=e("p",null,[e("code",null,"void")],-1),Ie=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3","aria-hidden":"true"},"#"),t(" Inherited from")],-1),Ae=s('<h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/lib/event-manager.ts:20</p><hr><h3 id="complete" tabindex="-1"><a class="header-anchor" href="#complete" aria-hidden="true">#</a> complete</h3><p>▸ <strong>complete</strong>(): <code>void</code></p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="inherited-from-4" tabindex="-1"><a class="header-anchor" href="#inherited-from-4" aria-hidden="true">#</a> Inherited from</h4>',8),Ve=s('<h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>src/lib/event-manager.ts:24</p><hr><h3 id="check" tabindex="-1"><a class="header-anchor" href="#check" aria-hidden="true">#</a> check</h3><p>▸ <strong>check</strong>(<code>ctx</code>): <code>Promise</code>&lt;<code>boolean</code>&gt;</p><p>A function to check whether this task should run at all via enable.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ctx</code></td><td style="text-align:left;"><code>Ctx</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>boolean</code>&gt;</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:117</p><hr><h3 id="hassubtasks" tabindex="-1"><a class="header-anchor" href="#hassubtasks" aria-hidden="true">#</a> hasSubtasks</h3><p>▸ <strong>hasSubtasks</strong>(): <code>boolean</code></p><p>Returns whether this task has subtasks.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:130</p><hr><h3 id="hasfinalized" tabindex="-1"><a class="header-anchor" href="#hasfinalized" aria-hidden="true">#</a> hasFinalized</h3><p>▸ <strong>hasFinalized</strong>(): <code>boolean</code></p><p>Returns whether this task is finalized in someform.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:135</p><hr><h3 id="ispending" tabindex="-1"><a class="header-anchor" href="#ispending" aria-hidden="true">#</a> isPending</h3><p>▸ <strong>isPending</strong>(): <code>boolean</code></p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:139</p><hr><h3 id="isstarted" tabindex="-1"><a class="header-anchor" href="#isstarted" aria-hidden="true">#</a> isStarted</h3><p>▸ <strong>isStarted</strong>(): <code>boolean</code></p><p>Returns whether this task is in progress.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-9" tabindex="-1"><a class="header-anchor" href="#defined-in-9" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:144</p><hr><h3 id="isskipped" tabindex="-1"><a class="header-anchor" href="#isskipped" aria-hidden="true">#</a> isSkipped</h3><p>▸ <strong>isSkipped</strong>(): <code>boolean</code></p><p>Returns whether this task is skipped.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-10" tabindex="-1"><a class="header-anchor" href="#defined-in-10" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:149</p><hr><h3 id="iscompleted" tabindex="-1"><a class="header-anchor" href="#iscompleted" aria-hidden="true">#</a> isCompleted</h3><p>▸ <strong>isCompleted</strong>(): <code>boolean</code></p><p>Returns whether this task has been completed.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-11" tabindex="-1"><a class="header-anchor" href="#defined-in-11" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:154</p><hr><h3 id="hasfailed" tabindex="-1"><a class="header-anchor" href="#hasfailed" aria-hidden="true">#</a> hasFailed</h3><p>▸ <strong>hasFailed</strong>(): <code>boolean</code></p><p>Returns whether this task has been failed.</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-12" tabindex="-1"><a class="header-anchor" href="#defined-in-12" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:159</p><hr><h3 id="isrollingback" tabindex="-1"><a class="header-anchor" href="#isrollingback" aria-hidden="true">#</a> isRollingBack</h3><p>▸ <strong>isRollingBack</strong>(): <code>boolean</code></p><p>Returns whether this task has an active rollback task going on.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-13" tabindex="-1"><a class="header-anchor" href="#defined-in-13" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:164</p><hr><h3 id="hasrolledback" tabindex="-1"><a class="header-anchor" href="#hasrolledback" aria-hidden="true">#</a> hasRolledBack</h3><p>▸ <strong>hasRolledBack</strong>(): <code>boolean</code></p><p>Returns whether the rollback action was successful.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-14" tabindex="-1"><a class="header-anchor" href="#defined-in-14" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:169</p><hr><h3 id="isretrying" tabindex="-1"><a class="header-anchor" href="#isretrying" aria-hidden="true">#</a> isRetrying</h3><p>▸ <strong>isRetrying</strong>(): <code>boolean</code></p><p>Returns whether this task has an actively retrying task going on.</p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-15" tabindex="-1"><a class="header-anchor" href="#defined-in-15" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:174</p><hr><h3 id="hasreset" tabindex="-1"><a class="header-anchor" href="#hasreset" aria-hidden="true">#</a> hasReset</h3><p>▸ <strong>hasReset</strong>(): <code>boolean</code></p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-16" tabindex="-1"><a class="header-anchor" href="#defined-in-16" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:178</p><hr><h3 id="isenabled" tabindex="-1"><a class="header-anchor" href="#isenabled" aria-hidden="true">#</a> isEnabled</h3><p>▸ <strong>isEnabled</strong>(): <code>boolean</code></p><p>Returns whether enabled function resolves to true.</p><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-17" tabindex="-1"><a class="header-anchor" href="#defined-in-17" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:183</p><hr><h3 id="hastitle" tabindex="-1"><a class="header-anchor" href="#hastitle" aria-hidden="true">#</a> hasTitle</h3><p>▸ <strong>hasTitle</strong>(): <code>boolean</code></p><p>Returns whether this task actually has a title.</p><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-18" tabindex="-1"><a class="header-anchor" href="#defined-in-18" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:188</p><hr><h3 id="isprompt" tabindex="-1"><a class="header-anchor" href="#isprompt" aria-hidden="true">#</a> isPrompt</h3><p>▸ <strong>isPrompt</strong>(): <code>boolean</code></p><p>Returns whether this task has a prompt inside.</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19" aria-hidden="true">#</a> Returns</h4><p><code>boolean</code></p><h4 id="defined-in-19" tabindex="-1"><a class="header-anchor" href="#defined-in-19" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:193</p><hr><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run" aria-hidden="true">#</a> run</h3><p>▸ <strong>run</strong>(<code>context</code>, <code>wrapper</code>): <code>Promise</code>&lt;<code>void</code>&gt;</p><p>Run the current task.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5" aria-hidden="true">#</a> Parameters</h4>',127),We=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),qe=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"context")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Ctx")])],-1),Ue=e("td",{style:{"text-align":"left"}},[e("code",null,"wrapper")],-1),He={style:{"text-align":"left"}},Xe=e("code",null,"ListrTaskWrapper",-1),Ye=e("code",null,"Ctx",-1),Ze=e("code",null,"Renderer",-1),Je=s('<h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20" aria-hidden="true">#</a> Returns</h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-20" tabindex="-1"><a class="header-anchor" href="#defined-in-20" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:198</p><hr><h3 id="emitshouldrefreshrender" tabindex="-1"><a class="header-anchor" href="#emitshouldrefreshrender" aria-hidden="true">#</a> emitShouldRefreshRender</h3><p>▸ <strong>emitShouldRefreshRender</strong>(): <code>void</code></p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-21" tabindex="-1"><a class="header-anchor" href="#defined-in-21" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:347</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> id</h3><p>• <strong>id</strong>: <code>string</code></p><p>Unique id per task, randomly generated in the uuid v4 format</p><h4 id="defined-in-22" tabindex="-1"><a class="header-anchor" href="#defined-in-22" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:26</p><hr><h3 id="state" tabindex="-1"><a class="header-anchor" href="#state" aria-hidden="true">#</a> state</h3>',19),Ke=e("strong",null,"state",-1),Qe=e("code",null,"ListrTaskState",-1),et=e("code",null,"ListrTaskState.WAITING",-1),tt=e("p",null,"The current state of the task.",-1),at=e("h4",{id:"defined-in-23",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-23","aria-hidden":"true"},"#"),t(" Defined in")],-1),dt=e("p",null,"src/lib/task.ts:28",-1),nt=e("hr",null,null,-1),st=e("h3",{id:"subtasks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#subtasks","aria-hidden":"true"},"#"),t(" subtasks")],-1),rt=e("strong",null,"subtasks",-1),it=e("code",null,"ListrTaskObject",-1),ht=e("code",null,"Ctx",-1),ot=e("code",null,"Renderer",-1),lt=s('<p>Extend current task with multiple subtasks.</p><h4 id="defined-in-24" tabindex="-1"><a class="header-anchor" href="#defined-in-24" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:30</p><hr><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3><p>• <code>Optional</code> <strong>title</strong>: <code>string</code></p><p>Title of the task</p><h4 id="defined-in-25" tabindex="-1"><a class="header-anchor" href="#defined-in-25" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:32</p><hr><h3 id="initialtitle" tabindex="-1"><a class="header-anchor" href="#initialtitle" aria-hidden="true">#</a> initialTitle</h3><p>• <code>Optional</code> <code>Readonly</code> <strong>initialTitle</strong>: <code>string</code></p><p>Untouched unchanged title of the task</p><h4 id="defined-in-26" tabindex="-1"><a class="header-anchor" href="#defined-in-26" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:34</p><hr><h3 id="output" tabindex="-1"><a class="header-anchor" href="#output" aria-hidden="true">#</a> output</h3><p>• <code>Optional</code> <strong>output</strong>: <code>string</code></p><p>Output data from the task.</p><h4 id="defined-in-27" tabindex="-1"><a class="header-anchor" href="#defined-in-27" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:36</p><hr><h3 id="retry" tabindex="-1"><a class="header-anchor" href="#retry" aria-hidden="true">#</a> retry</h3>',23),ct=e("code",null,"Optional",-1),ut=e("strong",null,"retry",-1),pt=e("code",null,"ListrTaskRetry",-1),_t=e("p",null,"Current retry number of the task if retrying",-1),ft=e("h4",{id:"defined-in-28",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-28","aria-hidden":"true"},"#"),t(" Defined in")],-1),bt=e("p",null,"src/lib/task.ts:38",-1),xt=e("hr",null,null,-1),gt=e("h3",{id:"message",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#message","aria-hidden":"true"},"#"),t(" message")],-1),mt=e("strong",null,"message",-1),yt=e("code",null,"ListrTaskMessage",-1),kt=e("code",null,"{}",-1),Tt=e("p",null,"A channel for messages.",-1),vt=e("p",null,"This requires a separate channel for messages like error, skip or runtime messages to further utilize in the renderers.",-1),Lt=e("h4",{id:"defined-in-29",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-29","aria-hidden":"true"},"#"),t(" Defined in")],-1),Rt=e("p",null,"src/lib/task.ts:44",-1),Et=e("hr",null,null,-1),Dt=e("h3",{id:"renderertaskoptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#renderertaskoptions","aria-hidden":"true"},"#"),t(" rendererTaskOptions")],-1),Ot=e("strong",null,"rendererTaskOptions",-1),Mt=e("code",null,"ListrGetRendererTaskOptions",-1),Pt=e("code",null,"Renderer",-1),Ct=e("p",null,"Per task options for the current renderer of the task.",-1),Nt=e("h4",{id:"defined-in-30",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-30","aria-hidden":"true"},"#"),t(" Defined in")],-1),wt=e("p",null,"src/lib/task.ts:46",-1),St=e("hr",null,null,-1),jt=e("h3",{id:"prompt",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prompt","aria-hidden":"true"},"#"),t(" prompt")],-1),$t=e("strong",null,"prompt",-1),Ft=e("code",null,"ListrTaskPrompt",-1),zt=e("p",null,"This will be triggered each time a new render should happen.",-1),Bt=e("h4",{id:"defined-in-31",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-31","aria-hidden":"true"},"#"),t(" Defined in")],-1),Gt=e("p",null,"src/lib/task.ts:48",-1),It=e("hr",null,null,-1),At=e("h3",{id:"parent",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parent","aria-hidden":"true"},"#"),t(" parent")],-1),Vt=e("code",null,"Optional",-1),Wt=e("strong",null,"parent",-1),qt=e("code",null,"ListrTaskObject",-1),Ut=e("code",null,"Ctx",-1),Ht=e("code",null,"Renderer",-1),Xt=s('<h4 id="defined-in-32" tabindex="-1"><a class="header-anchor" href="#defined-in-32" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:49</p><hr><h3 id="enabled" tabindex="-1"><a class="header-anchor" href="#enabled" aria-hidden="true">#</a> enabled</h3><p>• <code>Private</code> <strong>enabled</strong>: <code>boolean</code></p><h4 id="defined-in-33" tabindex="-1"><a class="header-anchor" href="#defined-in-33" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:51</p><hr><h3 id="taskfn" tabindex="-1"><a class="header-anchor" href="#taskfn" aria-hidden="true">#</a> taskFn</h3>',9),Yt=e("code",null,"Private",-1),Zt=e("strong",null,"taskFn",-1),Jt=e("code",null,"ListrTaskFn",-1),Kt=e("code",null,"Ctx",-1),Qt=e("code",null,"Renderer",-1),ea=e("p",null,"The task object itself, to further utilize it.",-1),ta=e("h4",{id:"defined-in-34",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-34","aria-hidden":"true"},"#"),t(" Defined in")],-1),aa=e("p",null,"src/lib/task.ts:53",-1),da=e("hr",null,null,-1),na=e("h3",{id:"listr",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#listr","aria-hidden":"true"},"#"),t(" listr")],-1),sa=e("strong",null,"listr",-1),ra=e("code",null,"Listr",-1),ia=e("code",null,"Ctx",-1),ha=e("code",null,"any",-1),oa=e("code",null,"any",-1),la=e("h4",{id:"defined-in-35",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-35","aria-hidden":"true"},"#"),t(" Defined in")],-1),ca=e("p",null,"src/lib/task.ts:55",-1),ua=e("hr",null,null,-1),pa=e("h3",{id:"task",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#task","aria-hidden":"true"},"#"),t(" task")],-1),_a=e("strong",null,"task",-1),fa=e("code",null,"ListrTask",-1),ba=e("code",null,"Ctx",-1),xa=e("code",null,"any",-1),ga=e("h4",{id:"defined-in-36",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-36","aria-hidden":"true"},"#"),t(" Defined in")],-1),ma=e("p",null,"src/lib/task.ts:55",-1),ya=e("hr",null,null,-1),ka=e("h3",{id:"options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options","aria-hidden":"true"},"#"),t(" options")],-1),Ta=e("strong",null,"options",-1),va=e("code",null,"ListrOptions",-1),La=e("code",null,"any",-1),Ra=e("h4",{id:"defined-in-37",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-37","aria-hidden":"true"},"#"),t(" Defined in")],-1),Ea=e("p",null,"src/lib/task.ts:55",-1),Da=e("hr",null,null,-1),Oa=e("h3",{id:"rendereroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rendereroptions","aria-hidden":"true"},"#"),t(" rendererOptions")],-1),Ma=e("strong",null,"rendererOptions",-1),Pa=e("code",null,"ListrGetRendererOptions",-1),Ca=e("code",null,"Renderer",-1),Na=s('<h4 id="defined-in-38" tabindex="-1"><a class="header-anchor" href="#defined-in-38" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:55</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new ListrTaskObject</strong>&lt;<code>Ctx</code>, <code>Renderer</code>&gt;(<code>listr</code>, <code>task</code>, <code>options</code>, <code>rendererOptions</code>)</p><h4 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5" aria-hidden="true">#</a> Type parameters</h4>',6),wa=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Sa=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"Ctx")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Ctx")])],-1),ja=e("td",{style:{"text-align":"left"}},[e("code",null,"Renderer")],-1),$a={style:{"text-align":"left"}},Fa=e("code",null,"ListrRenderer",-1),za=e("h4",{id:"parameters-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-6","aria-hidden":"true"},"#"),t(" Parameters")],-1),Ba=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Ga=e("td",{style:{"text-align":"left"}},[e("code",null,"listr")],-1),Ia={style:{"text-align":"left"}},Aa=e("code",null,"Listr",-1),Va=e("code",null,"Ctx",-1),Wa=e("code",null,"any",-1),qa=e("code",null,"any",-1),Ua=e("td",{style:{"text-align":"left"}},[e("code",null,"task")],-1),Ha={style:{"text-align":"left"}},Xa=e("code",null,"ListrTask",-1),Ya=e("code",null,"Ctx",-1),Za=e("code",null,"any",-1),Ja=e("td",{style:{"text-align":"left"}},[e("code",null,"options")],-1),Ka={style:{"text-align":"left"}},Qa=e("code",null,"ListrOptions",-1),ed=e("code",null,"any",-1),td=e("td",{style:{"text-align":"left"}},[e("code",null,"rendererOptions")],-1),ad={style:{"text-align":"left"}},dd=e("code",null,"ListrGetRendererOptions",-1),nd=e("code",null,"Renderer",-1),sd=e("h4",{id:"overrides",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overrides","aria-hidden":"true"},"#"),t(" Overrides")],-1),rd=s('<h4 id="defined-in-39" tabindex="-1"><a class="header-anchor" href="#defined-in-39" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:55</p><h2 id="accessors" tabindex="-1"><a class="header-anchor" href="#accessors" aria-hidden="true">#</a> Accessors</h2><h3 id="state-1" tabindex="-1"><a class="header-anchor" href="#state-1" aria-hidden="true">#</a> state$</h3><p>• <code>set</code> <strong>state$</strong>(<code>state</code>): <code>void</code></p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7" aria-hidden="true">#</a> Parameters</h4>',6),id=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),hd=e("td",{style:{"text-align":"left"}},[e("code",null,"state")],-1),od={style:{"text-align":"left"}},ld=e("code",null,"ListrTaskState",-1),cd=s('<h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-40" tabindex="-1"><a class="header-anchor" href="#defined-in-40" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:68</p><hr><h3 id="output-1" tabindex="-1"><a class="header-anchor" href="#output-1" aria-hidden="true">#</a> output$</h3><p>• <code>set</code> <strong>output$</strong>(<code>data</code>): <code>void</code></p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-41" tabindex="-1"><a class="header-anchor" href="#defined-in-41" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:85</p><hr><h3 id="promptoutput" tabindex="-1"><a class="header-anchor" href="#promptoutput" aria-hidden="true">#</a> promptOutput$</h3><p>• <code>set</code> <strong>promptOutput$</strong>(<code>data</code>): <code>void</code></p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-42" tabindex="-1"><a class="header-anchor" href="#defined-in-42" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:92</p><hr><h3 id="message-1" tabindex="-1"><a class="header-anchor" href="#message-1" aria-hidden="true">#</a> message$</h3><p>• <code>set</code> <strong>message$</strong>(<code>data</code>): <code>void</code></p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10" aria-hidden="true">#</a> Parameters</h4>',26),ud=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),pd=e("td",{style:{"text-align":"left"}},[e("code",null,"data")],-1),_d={style:{"text-align":"left"}},fd=e("code",null,"ListrTaskMessage",-1),bd=s('<h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-43" tabindex="-1"><a class="header-anchor" href="#defined-in-43" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:100</p><hr><h3 id="title-1" tabindex="-1"><a class="header-anchor" href="#title-1" aria-hidden="true">#</a> title$</h3><p>• <code>set</code> <strong>title$</strong>(<code>title</code>): <code>void</code></p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>title</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="defined-in-44" tabindex="-1"><a class="header-anchor" href="#defined-in-44" aria-hidden="true">#</a> Defined in</h4><p>src/lib/task.ts:107</p>',13);function xd(gd,md){const a=o("RouterLink");return i(),h("div",null,[c,u,p,e("table",null,[_,e("tbody",null,[f,e("tr",null,[b,e("td",x,[t("extends "),d(a,{to:"/api/types/ListrRendererFactory.html"},{default:n(()=>[g]),_:1})])])])]),m,e("ul",null,[e("li",null,[e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[y]),_:1})]),k])]),T,e("table",null,[v,e("tbody",null,[e("tr",null,[L,e("td",R,[t("extends "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[E]),_:1}),t(" = "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[D]),_:1})])])])]),O,e("table",null,[M,e("tbody",null,[P,e("tr",null,[C,e("td",N,[d(a,{to:"/api/types/EventData.html"},{default:n(()=>[w]),_:1}),t("<"),S,t(", "),d(a,{to:"/api/classes/ListrTaskEventMap.html"},{default:n(()=>[j]),_:1}),t(">")])])])]),$,F,z,e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[t("ListrTaskEventManager")]),_:1}),t("."),d(a,{to:"/api/classes/ListrTaskEventManager.html#emit"},{default:n(()=>[t("emit")]),_:1})]),B,e("table",null,[G,e("tbody",null,[e("tr",null,[I,e("td",A,[t("extends "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[V]),_:1}),t(" = "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[W]),_:1})])])])]),q,e("table",null,[U,e("tbody",null,[H,e("tr",null,[X,e("td",Y,[t("("),Z,t(": "),d(a,{to:"/api/types/EventData.html"},{default:n(()=>[J]),_:1}),t("<"),K,t(", "),d(a,{to:"/api/classes/ListrTaskEventMap.html"},{default:n(()=>[Q]),_:1}),t(">) => "),ee])])])]),te,ae,de,e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[t("ListrTaskEventManager")]),_:1}),t("."),d(a,{to:"/api/classes/ListrTaskEventManager.html#on"},{default:n(()=>[t("on")]),_:1})]),ne,e("table",null,[se,e("tbody",null,[e("tr",null,[re,e("td",ie,[t("extends "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[he]),_:1}),t(" = "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[oe]),_:1})])])])]),le,e("table",null,[ce,e("tbody",null,[ue,e("tr",null,[pe,e("td",_e,[t("("),fe,t(": "),d(a,{to:"/api/types/EventData.html"},{default:n(()=>[be]),_:1}),t("<"),xe,t(", "),d(a,{to:"/api/classes/ListrTaskEventMap.html"},{default:n(()=>[ge]),_:1}),t(">) => "),me])])])]),ye,ke,Te,e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[t("ListrTaskEventManager")]),_:1}),t("."),d(a,{to:"/api/classes/ListrTaskEventManager.html#once"},{default:n(()=>[t("once")]),_:1})]),ve,e("table",null,[Le,e("tbody",null,[e("tr",null,[Re,e("td",Ee,[t("extends "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[De]),_:1}),t(" = "),d(a,{to:"/api/enums/ListrTaskEventType.html"},{default:n(()=>[Oe]),_:1})])])])]),Me,e("table",null,[Pe,e("tbody",null,[Ce,e("tr",null,[Ne,e("td",we,[t("("),Se,t(": "),d(a,{to:"/api/types/EventData.html"},{default:n(()=>[je]),_:1}),t("<"),$e,t(", "),d(a,{to:"/api/classes/ListrTaskEventMap.html"},{default:n(()=>[Fe]),_:1}),t(">) => "),ze])])])]),Be,Ge,Ie,e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[t("ListrTaskEventManager")]),_:1}),t("."),d(a,{to:"/api/classes/ListrTaskEventManager.html#off"},{default:n(()=>[t("off")]),_:1})]),Ae,e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[t("ListrTaskEventManager")]),_:1}),t("."),d(a,{to:"/api/classes/ListrTaskEventManager.html#complete"},{default:n(()=>[t("complete")]),_:1})]),Ve,e("table",null,[We,e("tbody",null,[qe,e("tr",null,[Ue,e("td",He,[d(a,{to:"/api/classes/ListrTaskWrapper.html"},{default:n(()=>[Xe]),_:1}),t("<"),Ye,t(", "),Ze,t(">")])])])]),Je,e("p",null,[t("• "),Ke,t(": "),d(a,{to:"/api/enums/ListrTaskState.html"},{default:n(()=>[Qe]),_:1}),t(" = "),et]),tt,at,dt,nt,st,e("p",null,[t("• "),rt,t(": "),d(a,{to:"/api/classes/ListrTaskObject.html"},{default:n(()=>[it]),_:1}),t("<"),ht,t(", "),ot,t(">[]")]),lt,e("p",null,[t("• "),ct,t(),ut,t(": "),d(a,{to:"/api/interfaces/ListrTaskRetry.html"},{default:n(()=>[pt]),_:1})]),_t,ft,bt,xt,gt,e("p",null,[t("• "),mt,t(": "),d(a,{to:"/api/interfaces/ListrTaskMessage.html"},{default:n(()=>[yt]),_:1}),t(" = "),kt]),Tt,vt,Lt,Rt,Et,Dt,e("p",null,[t("• "),Ot,t(": "),d(a,{to:"/api/types/ListrGetRendererTaskOptions.html"},{default:n(()=>[Mt]),_:1}),t("<"),Pt,t(">")]),Ct,Nt,wt,St,jt,e("p",null,[t("• "),$t,t(": "),d(a,{to:"/api/types/ListrTaskPrompt.html"},{default:n(()=>[Ft]),_:1})]),zt,Bt,Gt,It,At,e("p",null,[t("• "),Vt,t(),Wt,t(": "),d(a,{to:"/api/classes/ListrTaskObject.html"},{default:n(()=>[qt]),_:1}),t("<"),Ut,t(", "),Ht,t(">")]),Xt,e("p",null,[t("• "),Yt,t(),Zt,t(": "),d(a,{to:"/api/types/ListrTaskFn.html"},{default:n(()=>[Jt]),_:1}),t("<"),Kt,t(", "),Qt,t(">")]),ea,ta,aa,da,na,e("p",null,[t("• "),sa,t(": "),d(a,{to:"/api/classes/Listr.html"},{default:n(()=>[ra]),_:1}),t("<"),ia,t(", "),ha,t(", "),oa,t(">")]),la,ca,ua,pa,e("p",null,[t("• "),_a,t(": "),d(a,{to:"/api/interfaces/ListrTask.html"},{default:n(()=>[fa]),_:1}),t("<"),ba,t(", "),xa,t(">")]),ga,ma,ya,ka,e("p",null,[t("• "),Ta,t(": "),d(a,{to:"/api/interfaces/ListrOptions.html"},{default:n(()=>[va]),_:1}),t("<"),La,t(">")]),Ra,Ea,Da,Oa,e("p",null,[t("• "),Ma,t(": "),d(a,{to:"/api/types/ListrGetRendererOptions.html"},{default:n(()=>[Pa]),_:1}),t("<"),Ca,t(">")]),Na,e("table",null,[wa,e("tbody",null,[Sa,e("tr",null,[ja,e("td",$a,[t("extends typeof "),d(a,{to:"/api/classes/ListrRenderer.html"},{default:n(()=>[Fa]),_:1})])])])]),za,e("table",null,[Ba,e("tbody",null,[e("tr",null,[Ga,e("td",Ia,[d(a,{to:"/api/classes/Listr.html"},{default:n(()=>[Aa]),_:1}),t("<"),Va,t(", "),Wa,t(", "),qa,t(">")])]),e("tr",null,[Ua,e("td",Ha,[d(a,{to:"/api/interfaces/ListrTask.html"},{default:n(()=>[Xa]),_:1}),t("<"),Ya,t(", "),Za,t(">")])]),e("tr",null,[Ja,e("td",Ka,[d(a,{to:"/api/interfaces/ListrOptions.html"},{default:n(()=>[Qa]),_:1}),t("<"),ed,t(">")])]),e("tr",null,[td,e("td",ad,[d(a,{to:"/api/types/ListrGetRendererOptions.html"},{default:n(()=>[dd]),_:1}),t("<"),nd,t(">")])])])]),sd,e("p",null,[d(a,{to:"/api/classes/ListrTaskEventManager.html"},{default:n(()=>[t("ListrTaskEventManager")]),_:1}),t("."),d(a,{to:"/api/classes/ListrTaskEventManager.html#constructor"},{default:n(()=>[t("constructor")]),_:1})]),rd,e("table",null,[id,e("tbody",null,[e("tr",null,[hd,e("td",od,[d(a,{to:"/api/enums/ListrTaskState.html"},{default:n(()=>[ld]),_:1})])])])]),cd,e("table",null,[ud,e("tbody",null,[e("tr",null,[pd,e("td",_d,[d(a,{to:"/api/interfaces/ListrTaskMessage.html"},{default:n(()=>[fd]),_:1})])])])]),bd])}const kd=r(l,[["render",xd],["__file","ListrTaskObject.html.vue"]]);export{kd as default};
