import{_ as r,W as i,X as o,Y as e,$ as t,Z as a,a2 as s,a5 as d,D as l}from"./framework-4c9bc095.js";const h={},c=e("h1",{id:"class-testrendererevent-t",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-testrendererevent-t","aria-hidden":"true"},"#"),t(" Class: TestRendererEvent<T>")],-1),_=e("h2",{id:"type-parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-parameters","aria-hidden":"true"},"#"),t(" Type parameters")],-1),u=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),f=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),p={style:{"text-align":"left"}},x=e("code",null,"ListrTaskEventType",-1),T=d('<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new TestRendererEvent</strong>&lt;<code>T</code>&gt;(<code>event</code>, <code>data</code>, <code>task?</code>)</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1" aria-hidden="true">#</a> Type parameters</h4>',4),y=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),m=e("td",{style:{"text-align":"left"}},[e("code",null,"T")],-1),b={style:{"text-align":"left"}},g=e("code",null,"ListrTaskEventType",-1),v=e("h4",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters","aria-hidden":"true"},"#"),t(" Parameters")],-1),k=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),L=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"event")]),e("td",{style:{"text-align":"left"}},[e("code",null,"T")])],-1),E=e("td",{style:{"text-align":"left"}},[e("code",null,"data")],-1),R={style:{"text-align":"left"}},N=e("code",null,"ListrTaskEventMap",-1),j=e("code",null,"T",-1),D=e("td",{style:{"text-align":"left"}},[e("code",null,"task?")],-1),M={style:{"text-align":"left"}},O=e("code",null,"ListrTaskObject",-1),C=e("code",null,"any",-1),V=e("code",null,"TestRenderer",-1),B=d('<h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.interface.ts:11</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event" aria-hidden="true">#</a> event</h3><p>• <strong>event</strong>: <code>T</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.interface.ts:11</p><hr><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3>',9),w=e("strong",null,"data",-1),J=e("code",null,"ListrTaskEventMap",-1),P=e("code",null,"T",-1),S=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),W=e("p",null,"src/renderer/test/renderer.interface.ts:11",-1),X=e("hr",null,null,-1),Y=e("h3",{id:"task",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#task","aria-hidden":"true"},"#"),t(" task")],-1),Z=e("code",null,"Optional",-1),$=e("strong",null,"task",-1),q=e("code",null,"ListrTaskObject",-1),z=e("code",null,"any",-1),A=e("code",null,"TestRenderer",-1),F=d('<h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.interface.ts:11</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="tojson" tabindex="-1"><a class="header-anchor" href="#tojson" aria-hidden="true">#</a> toJson</h3><p>▸ <strong>toJson</strong>(): <code>string</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>string</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.interface.ts:13</p>',9);function G(H,I){const n=l("RouterLink");return i(),o("div",null,[c,_,e("table",null,[u,e("tbody",null,[e("tr",null,[f,e("td",p,[t("extends "),a(n,{to:"/api/enums/ListrTaskEventType.html"},{default:s(()=>[x]),_:1})])])])]),T,e("table",null,[y,e("tbody",null,[e("tr",null,[m,e("td",b,[t("extends "),a(n,{to:"/api/enums/ListrTaskEventType.html"},{default:s(()=>[g]),_:1})])])])]),v,e("table",null,[k,e("tbody",null,[L,e("tr",null,[E,e("td",R,[a(n,{to:"/api/classes/ListrTaskEventMap.html"},{default:s(()=>[N]),_:1}),t("["),j,t("]")])]),e("tr",null,[D,e("td",M,[a(n,{to:"/api/classes/ListrTaskObject.html"},{default:s(()=>[O]),_:1}),t("<"),C,t(", typeof "),a(n,{to:"/api/classes/TestRenderer.html"},{default:s(()=>[V]),_:1}),t(">")])])])]),B,e("p",null,[t("• "),w,t(": "),a(n,{to:"/api/classes/ListrTaskEventMap.html"},{default:s(()=>[J]),_:1}),t("["),P,t("]")]),S,W,X,Y,e("p",null,[t("• "),Z,t(),$,t(": "),a(n,{to:"/api/classes/ListrTaskObject.html"},{default:s(()=>[q]),_:1}),t("<"),z,t(", typeof "),a(n,{to:"/api/classes/TestRenderer.html"},{default:s(()=>[A]),_:1}),t(">")]),F])}const Q=r(h,[["render",G],["__file","TestRendererEvent.html.vue"]]);export{Q as default};
