import{_ as a,W as i,X as o,Y as e,Z as n,a2 as d,$ as t,a5 as s,D as h}from"./framework-4c9bc095.js";const l={},c=e("h1",{id:"class-testrenderer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-testrenderer","aria-hidden":"true"},"#"),t(" Class: TestRenderer")],-1),_=e("p",null,"The bones of a listr renderer.",-1),u=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),t(" Implements")],-1),p=e("code",null,"ListrRenderer",-1),f=s('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="nontty" tabindex="-1"><a class="header-anchor" href="#nontty" aria-hidden="true">#</a> nonTTY</h3><p>▪ <code>Static</code> <strong>nonTTY</strong>: <code>boolean</code> = <code>true</code></p><p>designates whether this renderer can output to a non-tty console</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of" aria-hidden="true">#</a> Implementation of</h4>',5),m=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),x=e("p",null,"src/renderer/test/renderer.ts:9",-1),b=e("hr",null,null,-1),g=e("h3",{id:"rendereroptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#rendereroptions","aria-hidden":"true"},"#"),t(" rendererOptions")],-1),R=e("code",null,"Static",-1),T=e("strong",null,"rendererOptions",-1),k=e("code",null,"TestRendererOptions",-1),L=e("p",null,"renderer options for the verbose renderer",-1),y=e("h4",{id:"implementation-of-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implementation-of-1","aria-hidden":"true"},"#"),t(" Implementation of")],-1),v=s('<h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.ts:11</p><hr><h3 id="renderertaskoptions" tabindex="-1"><a class="header-anchor" href="#renderertaskoptions" aria-hidden="true">#</a> rendererTaskOptions</h3><p>▪ <code>Static</code> <strong>rendererTaskOptions</strong>: <code>never</code></p><p>per task options for the verbose renderer</p><h4 id="implementation-of-2" tabindex="-1"><a class="header-anchor" href="#implementation-of-2" aria-hidden="true">#</a> Implementation of</h4>',7),O=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),D=e("p",null,"src/renderer/test/renderer.ts:22",-1),P=e("hr",null,null,-1),I=e("h3",{id:"logger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logger","aria-hidden":"true"},"#"),t(" logger")],-1),N=e("code",null,"Private",-1),w=e("code",null,"Readonly",-1),C=e("strong",null,"logger",-1),S=e("code",null,"ListrLogger",-1),V=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),Y=e("p",null,"src/renderer/test/renderer.ts:24",-1),B=e("hr",null,null,-1),A=e("h3",{id:"tasks",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tasks","aria-hidden":"true"},"#"),t(" tasks")],-1),E=e("code",null,"Private",-1),M=e("code",null,"Readonly",-1),W=e("strong",null,"tasks",-1),X=e("code",null,"ListrTestRendererTasks",-1),Z=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),$=e("p",null,"src/renderer/test/renderer.ts:26",-1),j=e("hr",null,null,-1),q=e("h3",{id:"options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options","aria-hidden":"true"},"#"),t(" options")],-1),z=e("code",null,"Private",-1),F=e("code",null,"Readonly",-1),G=e("strong",null,"options",-1),H=e("code",null,"TestRendererOptions",-1),J=s('<h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.ts:26</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new TestRenderer</strong>(<code>tasks</code>, <code>options</code>)</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4>',6),K=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),Q=e("td",{style:{"text-align":"left"}},[e("code",null,"tasks")],-1),U={style:{"text-align":"left"}},ee=e("code",null,"ListrTestRendererTasks",-1),te=e("td",{style:{"text-align":"left"}},[e("code",null,"options")],-1),re={style:{"text-align":"left"}},ne=e("code",null,"TestRendererOptions",-1),de=s('<h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.ts:26</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><p>▸ <strong>render</strong>(): <code>void</code></p><p>A function to what to do on render</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="implementation-of-3" tabindex="-1"><a class="header-anchor" href="#implementation-of-3" aria-hidden="true">#</a> Implementation of</h4><p>ListrRenderer.render</p><h4 id="defined-in-7" tabindex="-1"><a class="header-anchor" href="#defined-in-7" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.ts:32</p><hr><h3 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h3><p>▸ <strong>end</strong>(): <code>void</code></p><p>A function to what to do on end of the render</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h4><p><code>void</code></p><h4 id="implementation-of-4" tabindex="-1"><a class="header-anchor" href="#implementation-of-4" aria-hidden="true">#</a> Implementation of</h4><p>ListrRenderer.end</p><h4 id="defined-in-8" tabindex="-1"><a class="header-anchor" href="#defined-in-8" aria-hidden="true">#</a> Defined in</h4><p>src/renderer/test/renderer.ts:37</p><hr><h3 id="renderer" tabindex="-1"><a class="header-anchor" href="#renderer" aria-hidden="true">#</a> renderer</h3><p>▸ <code>Private</code> <strong>renderer</strong>(<code>tasks</code>): <code>void</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',26),se=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),ae=e("td",{style:{"text-align":"left"}},[e("code",null,"tasks")],-1),ie={style:{"text-align":"left"}},oe=e("code",null,"ListrTestRendererTasks",-1),he=e("h4",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2","aria-hidden":"true"},"#"),t(" Returns")],-1),le=e("p",null,[e("code",null,"void")],-1),ce=e("h4",{id:"defined-in-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-9","aria-hidden":"true"},"#"),t(" Defined in")],-1),_e=e("p",null,"src/renderer/test/renderer.ts:40",-1);function ue(pe,fe){const r=h("RouterLink");return i(),o("div",null,[c,_,u,e("ul",null,[e("li",null,[n(r,{to:"/api/classes/ListrRenderer.html"},{default:d(()=>[p]),_:1})])]),f,e("p",null,[n(r,{to:"/api/classes/ListrRenderer.html"},{default:d(()=>[t("ListrRenderer")]),_:1}),t("."),n(r,{to:"/api/classes/ListrRenderer.html#nontty"},{default:d(()=>[t("nonTTY")]),_:1})]),m,x,b,g,e("p",null,[t("▪ "),R,t(),T,t(": "),n(r,{to:"/api/interfaces/TestRendererOptions.html"},{default:d(()=>[k]),_:1})]),L,y,e("p",null,[n(r,{to:"/api/classes/ListrRenderer.html"},{default:d(()=>[t("ListrRenderer")]),_:1}),t("."),n(r,{to:"/api/classes/ListrRenderer.html#rendereroptions"},{default:d(()=>[t("rendererOptions")]),_:1})]),v,e("p",null,[n(r,{to:"/api/classes/ListrRenderer.html"},{default:d(()=>[t("ListrRenderer")]),_:1}),t("."),n(r,{to:"/api/classes/ListrRenderer.html#renderertaskoptions"},{default:d(()=>[t("rendererTaskOptions")]),_:1})]),O,D,P,I,e("p",null,[t("• "),N,t(),w,t(),C,t(": "),n(r,{to:"/api/classes/ListrLogger.html"},{default:d(()=>[S]),_:1})]),V,Y,B,A,e("p",null,[t("• "),E,t(),M,t(),W,t(": "),n(r,{to:"/api/types/ListrTestRendererTasks.html"},{default:d(()=>[X]),_:1})]),Z,$,j,q,e("p",null,[t("• "),z,t(),F,t(),G,t(": "),n(r,{to:"/api/interfaces/TestRendererOptions.html"},{default:d(()=>[H]),_:1})]),J,e("table",null,[K,e("tbody",null,[e("tr",null,[Q,e("td",U,[n(r,{to:"/api/types/ListrTestRendererTasks.html"},{default:d(()=>[ee]),_:1})])]),e("tr",null,[te,e("td",re,[n(r,{to:"/api/interfaces/TestRendererOptions.html"},{default:d(()=>[ne]),_:1})])])])]),de,e("table",null,[se,e("tbody",null,[e("tr",null,[ae,e("td",ie,[n(r,{to:"/api/types/ListrTestRendererTasks.html"},{default:d(()=>[oe]),_:1})])])])]),he,le,ce,_e])}const xe=a(l,[["render",ue],["__file","TestRenderer.html.vue"]]);export{xe as default};
