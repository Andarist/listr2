import{_ as a,W as o,X as i,Y as e,Z as d,a2 as n,$ as t,a5 as s,D as c}from"./framework-4c9bc095.js";const l={},h=e("h1",{id:"class-listrrenderer",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-listrrenderer","aria-hidden":"true"},"#"),t(" Class: ListrRenderer")],-1),p=e("p",null,"The bones of a listr renderer.",-1),f=e("h2",{id:"implemented-by",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implemented-by","aria-hidden":"true"},"#"),t(" Implemented by")],-1),u=e("code",null,"DefaultRenderer",-1),_=e("code",null,"ListrBaseRenderer",-1),y=e("code",null,"SilentRenderer",-1),x=e("code",null,"SimpleRenderer",-1),b=e("code",null,"TestRenderer",-1),g=e("code",null,"VerboseRenderer",-1),m=s('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="rendereroptions" tabindex="-1"><a class="header-anchor" href="#rendereroptions" aria-hidden="true">#</a> rendererOptions</h3><p>▪ <code>Static</code> <strong>rendererOptions</strong>: <code>Record</code>&lt;<code>PropertyKey</code>, <code>any</code>&gt;</p><p>designate renderer global options that is specific to the current renderer</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/renderer.interface.ts:104</p><hr><h3 id="renderertaskoptions" tabindex="-1"><a class="header-anchor" href="#renderertaskoptions" aria-hidden="true">#</a> rendererTaskOptions</h3><p>▪ <code>Static</code> <strong>rendererTaskOptions</strong>: <code>Record</code>&lt;<code>PropertyKey</code>, <code>any</code>&gt;</p><p>designate renderer per task options that is specific to the current renderer</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/renderer.interface.ts:106</p><hr><h3 id="nontty" tabindex="-1"><a class="header-anchor" href="#nontty" aria-hidden="true">#</a> nonTTY</h3><p>▪ <code>Static</code> <strong>nonTTY</strong>: <code>boolean</code></p><p>designate whether this renderer can work in non-tty environments</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/renderer.interface.ts:108</p><hr><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><p>• <strong>render</strong>: () =&gt; <code>void</code> | <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>▸ (): <code>void</code> | <code>Promise</code>&lt;<code>void</code>&gt;</p><p>A function to what to do on render</p><h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>void</code> | <code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/renderer.interface.ts:110</p><hr><h3 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h3><p>• <strong>end</strong>: (<code>err?</code>: <code>Error</code>) =&gt; <code>void</code></p><h4 id="type-declaration-1" tabindex="-1"><a class="header-anchor" href="#type-declaration-1" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>err?</code>): <code>void</code></p><p>A function to what to do on end of the render</p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>err?</code></td><td style="text-align:left;"><code>Error</code></td></tr></tbody></table><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1" aria-hidden="true">#</a> Returns</h5><p><code>void</code></p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/renderer.interface.ts:112</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new ListrRenderer</strong>(<code>tasks</code>, <code>options</code>, <code>events?</code>)</p><p>create a new renderer</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a> Parameters</h4>',45),R=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type")])],-1),v=e("td",{style:{"text-align":"left"}},[e("code",null,"tasks")],-1),T={style:{"text-align":"left"}},k=e("code",null,"ListrTaskObject",-1),L=e("code",null,"any",-1),D=e("code",null,"ListrRenderer",-1),P=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"options")]),e("td",{style:{"text-align":"left"}},[e("code",null,"Record"),t("<"),e("code",null,"PropertyKey"),t(", "),e("code",null,"any"),t(">")])],-1),S=e("td",{style:{"text-align":"left"}},[e("code",null,"events?")],-1),w={style:{"text-align":"left"}},N=e("code",null,"ListrEventManager",-1),O=e("h4",{id:"defined-in-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-5","aria-hidden":"true"},"#"),t(" Defined in")],-1),V=e("p",null,"src/interfaces/renderer.interface.ts:114",-1);function B(E,C){const r=c("RouterLink");return o(),i("div",null,[h,p,f,e("ul",null,[e("li",null,[d(r,{to:"/api/classes/DefaultRenderer.html"},{default:n(()=>[u]),_:1})]),e("li",null,[d(r,{to:"/api/classes/ListrBaseRenderer.html"},{default:n(()=>[_]),_:1})]),e("li",null,[d(r,{to:"/api/classes/SilentRenderer.html"},{default:n(()=>[y]),_:1})]),e("li",null,[d(r,{to:"/api/classes/SimpleRenderer.html"},{default:n(()=>[x]),_:1})]),e("li",null,[d(r,{to:"/api/classes/TestRenderer.html"},{default:n(()=>[b]),_:1})]),e("li",null,[d(r,{to:"/api/classes/VerboseRenderer.html"},{default:n(()=>[g]),_:1})])]),m,e("table",null,[R,e("tbody",null,[e("tr",null,[v,e("td",T,[t("readonly "),d(r,{to:"/api/classes/ListrTaskObject.html"},{default:n(()=>[k]),_:1}),t("<"),L,t(", typeof "),d(r,{to:"/api/classes/ListrRenderer.html"},{default:n(()=>[D]),_:1}),t(">[]")])]),P,e("tr",null,[S,e("td",w,[d(r,{to:"/api/classes/ListrEventManager.html"},{default:n(()=>[N]),_:1})])])])]),O,V])}const Y=a(l,[["render",B],["__file","ListrRenderer.html.vue"]]);export{Y as default};
