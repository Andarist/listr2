import{_ as s,W as d,X as h,Y as e,Z as n,a2 as i,$ as a,a5 as r,D as o}from"./framework-4c9bc095.js";const c={},l=e("h1",{id:"class-listrtaskeventmap",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#class-listrtaskeventmap","aria-hidden":"true"},"#"),a(" Class: ListrTaskEventMap")],-1),p=e("p",null,"Event map for internal listr events.",-1),f=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),a(" Hierarchy")],-1),u=e("code",null,"BaseEventMap",-1),m=e("p",null,[a("↳ "),e("strong",null,[e("code",null,"ListrTaskEventMap")])],-1),_=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements","aria-hidden":"true"},"#"),a(" Implements")],-1),E=e("code",null,"EventMap",-1),T=e("code",null,"ListrTaskEventType",-1),b=r('<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors" aria-hidden="true">#</a> Constructors</h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor" aria-hidden="true">#</a> constructor</h3><p>• <strong>new ListrTaskEventMap</strong>()</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',4),v=e("h2",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),a(" Properties")],-1),x=e("h3",{id:"state",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#state","aria-hidden":"true"},"#"),a(" STATE")],-1),M=e("strong",null,"STATE",-1),g=e("code",null,"ListrTaskState",-1),k=r('<h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.STATE</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:15</p><hr><h3 id="enabled" tabindex="-1"><a class="header-anchor" href="#enabled" aria-hidden="true">#</a> ENABLED</h3><p>• <strong>ENABLED</strong>: <code>boolean</code></p><h4 id="implementation-of-1" tabindex="-1"><a class="header-anchor" href="#implementation-of-1" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.ENABLED</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:16</p><hr><h3 id="subtask" tabindex="-1"><a class="header-anchor" href="#subtask" aria-hidden="true">#</a> SUBTASK</h3>',13),L=e("strong",null,"SUBTASK",-1),S=e("code",null,"ListrTaskObject",-1),B=e("code",null,"any",-1),A=e("code",null,"any",-1),I=r('<h4 id="implementation-of-2" tabindex="-1"><a class="header-anchor" href="#implementation-of-2" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.SUBTASK</p><h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:17</p><hr><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> TITLE</h3><p>• <strong>TITLE</strong>: <code>string</code></p><h4 id="implementation-of-3" tabindex="-1"><a class="header-anchor" href="#implementation-of-3" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.TITLE</p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:18</p><hr><h3 id="output" tabindex="-1"><a class="header-anchor" href="#output" aria-hidden="true">#</a> OUTPUT</h3><p>• <strong>OUTPUT</strong>: <code>string</code></p><h4 id="implementation-of-4" tabindex="-1"><a class="header-anchor" href="#implementation-of-4" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.OUTPUT</p><h4 id="defined-in-4" tabindex="-1"><a class="header-anchor" href="#defined-in-4" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:19</p><hr><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> MESSAGE</h3>',20),D=e("strong",null,"MESSAGE",-1),P=e("code",null,"ListrTaskMessage",-1),U=r('<h4 id="implementation-of-5" tabindex="-1"><a class="header-anchor" href="#implementation-of-5" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.MESSAGE</p><h4 id="defined-in-5" tabindex="-1"><a class="header-anchor" href="#defined-in-5" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:20</p><hr><h3 id="prompt" tabindex="-1"><a class="header-anchor" href="#prompt" aria-hidden="true">#</a> PROMPT</h3><p>• <strong>PROMPT</strong>: <code>string</code></p><h4 id="implementation-of-6" tabindex="-1"><a class="header-anchor" href="#implementation-of-6" aria-hidden="true">#</a> Implementation of</h4><p>EventMap.PROMPT</p><h4 id="defined-in-6" tabindex="-1"><a class="header-anchor" href="#defined-in-6" aria-hidden="true">#</a> Defined in</h4><p>src/interfaces/event-map.interface.ts:21</p>',11);function y(O,N){const t=o("RouterLink");return d(),h("div",null,[l,p,f,e("ul",null,[e("li",null,[e("p",null,[n(t,{to:"/api/classes/BaseEventMap.html"},{default:i(()=>[u]),_:1})]),m])]),_,e("ul",null,[e("li",null,[n(t,{to:"/api/types/EventMap.html"},{default:i(()=>[E]),_:1}),a("<"),n(t,{to:"/api/enums/ListrTaskEventType.html"},{default:i(()=>[T]),_:1}),a(">")])]),b,e("p",null,[n(t,{to:"/api/classes/BaseEventMap.html"},{default:i(()=>[a("BaseEventMap")]),_:1}),a("."),n(t,{to:"/api/classes/BaseEventMap.html#constructor"},{default:i(()=>[a("constructor")]),_:1})]),v,x,e("p",null,[a("• "),M,a(": "),n(t,{to:"/api/enums/ListrTaskState.html"},{default:i(()=>[g]),_:1})]),k,e("p",null,[a("• "),L,a(": "),n(t,{to:"/api/classes/ListrTaskObject.html"},{default:i(()=>[S]),_:1}),a("<"),B,a(", "),A,a(">[]")]),I,e("p",null,[a("• "),D,a(": "),n(t,{to:"/api/interfaces/ListrTaskMessage.html"},{default:i(()=>[P]),_:1})]),U])}const C=s(c,[["render",y],["__file","ListrTaskEventMap.html.vue"]]);export{C as default};
