import{_ as n,W as i,X as s,Y as e,$ as t,Z as r,a2 as d,a5 as o,D as h}from"./framework-4c9bc095.js";const c={},l=o('<h1 id="interface-loggerfieldfn-args" tabindex="-1"><a class="header-anchor" href="#interface-loggerfieldfn-args" aria-hidden="true">#</a> Interface: LoggerFieldFn&lt;Args&gt;</h1><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters" aria-hidden="true">#</a> Type parameters</h2><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>Args</code></td><td style="text-align:left;">extends <code>any</code>[] = <code>any</code>[]</td></tr></tbody></table><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="field" tabindex="-1"><a class="header-anchor" href="#field" aria-hidden="true">#</a> field</h3><p>• <strong>field</strong>: <code>string</code> | (...<code>args</code>: <code>Args</code>) =&gt; <code>string</code></p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/utils/logger/logger.interface.ts:40</p><hr><h3 id="condition" tabindex="-1"><a class="header-anchor" href="#condition" aria-hidden="true">#</a> condition</h3><p>• <code>Optional</code> <strong>condition</strong>: <code>boolean</code> | (...<code>args</code>: <code>Args</code>) =&gt; <code>boolean</code></p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4><p>src/utils/logger/logger.interface.ts:41</p><hr><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format" aria-hidden="true">#</a> format</h3>',15),g=e("code",null,"Optional",-1),f=e("strong",null,"format",-1),p=e("code",null,"args",-1),u=e("code",null,"Args",-1),_=e("code",null,"LoggerFormat",-1),m=e("h4",{id:"type-declaration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-declaration","aria-hidden":"true"},"#"),t(" Type declaration")],-1),x=e("code",null,"...args",-1),y=e("code",null,"LoggerFormat",-1),b=o('<h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>Args</code></td></tr></tbody></table><h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5>',3),F=e("code",null,"LoggerFormat",-1),L=o('<h4 id="defined-in-2" tabindex="-1"><a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a> Defined in</h4><p>src/utils/logger/logger.interface.ts:42</p><hr><h3 id="args" tabindex="-1"><a class="header-anchor" href="#args" aria-hidden="true">#</a> args</h3><p>• <code>Optional</code> <strong>args</strong>: <code>Args</code></p><h4 id="defined-in-3" tabindex="-1"><a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a> Defined in</h4><p>src/utils/logger/logger.interface.ts:43</p>',7);function A(N,D){const a=h("RouterLink");return i(),s("div",null,[l,e("p",null,[t("• "),g,t(),f,t(": (..."),p,t(": "),u,t(") => "),r(a,{to:"/api/types/LoggerFormat.html"},{default:d(()=>[_]),_:1})]),m,e("p",null,[t("▸ ("),x,t("): "),r(a,{to:"/api/types/LoggerFormat.html"},{default:d(()=>[y]),_:1})]),b,e("p",null,[r(a,{to:"/api/types/LoggerFormat.html"},{default:d(()=>[F]),_:1})]),L])}const k=n(c,[["render",A],["__file","LoggerFieldFn.html.vue"]]);export{k as default};
