import{_ as e,W as t,X as a,a5 as r}from"./framework-4c9bc095.js";const d={},o=r('<h1 id="type-alias-loggerformat" tabindex="-1"><a class="header-anchor" href="#type-alias-loggerformat" aria-hidden="true">#</a> Type alias: LoggerFormat</h1><p>Ƭ <strong>LoggerFormat</strong>: (<code>message?</code>: <code>string</code>) =&gt; <code>string</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><p>▸ (<code>message?</code>): <code>string</code></p><h5 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>message?</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h5 id="returns" tabindex="-1"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h5><p><code>string</code></p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4><p>src/utils/logger/logger.interface.ts:37</p>',10),s=[o];function n(i,c){return t(),a("div",null,s)}const l=e(d,[["render",n],["__file","LoggerFormat.html.vue"]]);export{l as default};
